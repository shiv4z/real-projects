package shiv.com.serviceImpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Service;

import com.lowagie.text.Document;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;

import jakarta.servlet.http.HttpServletResponse;
import shiv.com.entity.CitizenPlan;
import shiv.com.model.SearchRequest;
import shiv.com.repo.CitizenPlanRepo;
import shiv.com.service.ReportService;
import shiv.com.util.ExcelGenerator;
import shiv.com.util.PdfGenerator;

@Service
public class ReportServiceImpl implements ReportService{

	@Autowired
	private CitizenPlanRepo reportRepo;
	
	@Autowired
	private ExcelGenerator excelGenerator;
	
	@Autowired
	private PdfGenerator pdfGenerator;
	
	@Override
	public List<String> fetchPlanName() {
		return reportRepo.fetchPlanName();
	}

	@Override
	public List<String> fetchPlanStatus() {
		return reportRepo.fetchPlanStatus();
	}

	@Override
	public List<CitizenPlan> loadCitizenPlan(SearchRequest request) {
		CitizenPlan citizenPlan = new CitizenPlan();
		if(null != request.getPlanName() && "" != request.getPlanName()) {
			citizenPlan.setPlanName(request.getPlanName());
		}
		if(null != request.getPlanStatus() && "" != request.getPlanStatus()) {
			citizenPlan.setPlanStatus(request.getPlanStatus());
		}
		if(null != request.getGender() && "" != request.getGender()) {
			citizenPlan.setGender(request.getGender());
		}
		if(null != request.getStartDate()) {
			citizenPlan.setStartDate(request.getStartDate());
		}
		if(null != request.getEndDate()) {
			citizenPlan.setEndDate(request.getEndDate());
		}
			
		return reportRepo.findAll(Example.of(citizenPlan));
		
	}


	@Override
	public Boolean exportExcel() {
		return null;
	}

	@Override
	public Boolean exportPdf() {
		return null;
	}

	@Override
	public Boolean downloadExcel(HttpServletResponse response) {
      Boolean isDownloaded = Boolean.FALSE;
		
      
		return isDownloaded;
	}

	@Override
	public Boolean downloadPdf(HttpServletResponse response) {
		Boolean isDownloaded = Boolean.FALSE;
		try {
			Document document = new Document(PageSize.A4); 
			PdfWriter.getInstance(document, response.getOutputStream());  
			document.open();
			
			Font fontTiltle = FontFactory.getFont(FontFactory.TIMES_ROMAN);
		    fontTiltle.setSize(20);
			
			Paragraph paragraph= new Paragraph("Citizen Plan");
			paragraph.setAlignment(Paragraph.ALIGN_CENTER);
			document.add(paragraph);	
			
			PdfPTable table = new PdfPTable(9);
			
			table.setWidthPercentage(100f);
		    table.setSpacingBefore(5);
		    
			table.addCell("ID");
			table.addCell("Name");
			table.addCell("GENDER");
			table.addCell("PLAN_NAME");
			table.addCell("PLAN_STATUS");
			table.addCell("BENEFIT_AMOUNT");
			table.addCell("PLAN_START_DATE");
			table.addCell("PLAN_END_DATE");
			table.addCell("PLAN_DENIED_REASON");
			
		//	float[] columnWidths = {2f, 3f, 2f, 4f, 4f, 6f, 6f, 6f, 6f};
	   //     table.setWidths(columnWidths);
	        
			List<CitizenPlan> citizens = reportRepo.findAll();
			if(null != citizens && !citizens.isEmpty()) {
				citizens.forEach( obj -> {
					table.addCell(obj.getCitizenId().toString());
					table.addCell(obj.getCitizenName());
					table.addCell(obj.getGender());
					table.addCell(obj.getPlanName());
					table.addCell(obj.getPlanStatus());
					table.addCell(obj.getBenefitAmount().toString() != null ? obj.getBenefitAmount().toString(): "NA");
					table.addCell(obj.getStartDate().toString() != null ? obj.getStartDate().toString() : "NA");
					table.addCell(obj.getEndDate().toString() != null ? obj.getEndDate().toString() : "NA");
					table.addCell(obj.getDeniedReason() != null ? obj.getDeniedReason() : "NA");
					
				});
			}
			
			document.add(table);
			document.close();
			isDownloaded = Boolean.FALSE;
		}catch(Exception e) {
			e.printStackTrace();
		}
		return isDownloaded;

	}
}
